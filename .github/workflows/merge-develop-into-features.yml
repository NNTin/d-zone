name: Merge develop into feature branches

on:
  push:
    branches:
      - develop
      - feature/merge_develop_into_feature

permissions:
  contents: write  # Needed to push merged changes back to branches

jobs:
  list-feature-branches:
    name: List feature branches
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list.outputs.matrix }}
      count: ${{ steps.list.outputs.count }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: List feature branches
        id: list
        run: |
          # First, let's debug what we can see
          echo "=== Debugging remote branches ==="
          echo "All remote branches:"
          git branch -r
          echo ""
          echo "Remote feature branches with ls-remote:"
          git ls-remote --heads origin
          echo ""
          echo "Filtering for feature branches:"
          git ls-remote --heads origin | grep "refs/heads/feature/"
          echo "=== End debug ==="
          
          # Get remote branches starting with 'feature/'
          branches=$(git ls-remote --heads origin | grep "refs/heads/feature/" | awk '{print $2}' | sed 's#refs/heads/##')

          # Convert to JSON array, ensuring we always have a valid array
          if [ -z "$branches" ]; then
            echo "No feature branches found"
            json='[]'
            count=0
          else
            echo "Found feature branches: $branches"
            # Convert each line to a JSON array element
            json=$(echo "$branches" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            count=$(echo "$json" | jq 'length')
            echo "Generated JSON: $json"
          fi

          echo "Found $count feature branches"
          echo "matrix=$json" >> $GITHUB_OUTPUT
          echo "count=$count" >> $GITHUB_OUTPUT

  merge-into-feature:
    name: Merge develop into feature branches
    needs: list-feature-branches
    if: needs.list-feature-branches.outputs.count != '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Process all feature branches
        run: |
          echo "Processing feature branches..."
          branches='${{ needs.list-feature-branches.outputs.matrix }}'
          echo "Branches JSON: $branches"
          
          # Parse the JSON array and process each branch
          echo "$branches" | jq -r '.[]' | while read -r branch; do
            echo "Processing branch: $branch"
            
            # Checkout the feature branch
            git checkout "$branch" || {
              echo "Failed to checkout $branch, trying to fetch it first"
              git fetch origin "$branch:$branch"
              git checkout "$branch"
            }
            
            # Fetch latest develop
            git fetch origin develop
            
            # Try to merge develop
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            
            # Attempt merge
            if git merge origin/develop --no-commit --no-ff; then
              # Check if merge is needed
              if git diff --cached --quiet; then
                echo "$branch: Branch is already up to date with develop."
              else
                echo "$branch: Successfully merged develop into branch."
                git commit -m "Merge branch 'develop' into $branch [auto-merge]"
                git push origin HEAD:$branch
                echo "$branch: Pushed merged changes."
              fi
            else
              echo "$branch: Merge conflict detected when merging develop."
              git merge --abort
            fi
            
            echo "---"
          done

  summarize:
    name: Summarize Merge Results
    needs: [list-feature-branches, merge-into-feature]
    if: always() && needs.list-feature-branches.outputs.count != '0'
    runs-on: ubuntu-latest
    steps:
      - name: Write merge summary
        run: |
          echo "### Merge Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The results for merging \`develop\` into all \`feature/*\` branches are shown above." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Processed ${{ needs.list-feature-branches.outputs.count }} feature branches" >> $GITHUB_STEP_SUMMARY
